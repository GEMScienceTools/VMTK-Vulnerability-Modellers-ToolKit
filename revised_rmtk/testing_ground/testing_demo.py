# -*- coding: utf-8 -*-
"""
Created on Fri Feb 14 09:34:16 2020

@author: LuisMartins
"""
#%% import rmtk modules
import capacity_start as cap
import consequence_damage_models_start as cdm
import select_gmrs_start as selgmrs
import demand_start as dem
import fragility_vulnerability_base as fvb
import nlth_on_sdof as nlth
#import nlth_on_sdof_1 as nlth

#%% import other modules 
import os 
import numpy as np
import glob
import matplotlib.pyplot as plt
# %% testing capacity 
current_dir=os.getcwd()

#cap_file=os.path.join(current_dir,'testing_ground_files','cap_curve_test_nlth.csv')
cap_file=os.path.join(current_dir,'testing_ground_files','c2l_mc_test.csv')
cap_nlth_array,x_arrays,y_arrays=cap.read_capacity_csv_file(cap_file)

#gmrs_in_files=glob.glob(os.path.join(os.path.join(current_dir,'testing_ground_files','gmrs','*.csv')))
gmrs_in_files=glob.glob(os.path.join(os.path.join(current_dir,'testing_ground_files','Crustal','*.csv')))
edps=np.zeros([len(gmrs_in_files),1])
edps2=np.zeros([len(gmrs_in_files),1])
imls=np.zeros([len(gmrs_in_files),1])
for i in range(len(gmrs_in_files)):
      
      gmr_nlth2=np.loadtxt(gmrs_in_files[i],delimiter=',')
      Sd, Sa=selgmrs.NewmarkBeta(gmr_nlth2[:,0],gmr_nlth2[:,1]*9.81,[0.3],0.05)
      imls[i]=Sa
      time_0075,disps_0075,accels_0075=nlth.run_nlth_analysis_on_sdof_ops_py(cap_nlth_array,gmr_nlth2,0.075,False)
      time_005,disps_005,accels_005=nlth.run_nlth_analysis_on_sdof_ops_py(cap_nlth_array,gmr_nlth2,0.2,False)
      edps[i]=np.max(np.abs(disps_0075))
      edps2[i]=np.max(np.abs(disps_005))
      
dam_model=[0.75*cap_nlth_array[1,0],0.68*cap_nlth_array[1,0]+0.32*cap_nlth_array[-1,0],0.34*cap_nlth_array[1,0]+0.66*cap_nlth_array[-1,0],cap_nlth_array[-1,0]]
#imls_linspace,probability_damage_state,r_square=fvb.fragility_censored_cloud_analysis(imls,edps,[0.75*cap_nlth_array[2,0],0.5*cap_nlth_array[2,0]+0.33*cap_nlth_array[-1,0],0.25*cap_nlth_array[2,0]+0.67*cap_nlth_array[-1,0],cap_nlth_array[-1,0]],(1.5*cap_nlth_array[-1,0]))
imls_linspace,probability_damage_state,r_square=fvb.fragility_censored_cloud_analysis(imls,edps,dam_model,(1.5*cap_nlth_array[-1,0]))
consequence=np.array([0.05,0.2,0.6,1])
vul_curve_array=fvb.calculate_vul_curve_dam_to_loss(imls_linspace,probability_damage_state,consequence)

#%%


#frag_curves=np.loadtxt(os.path.join(os.path.join(current_dir,'testing_ground_files','prob_out.csv')),delimiter=',')
#vul_curves=np.loadtxt(os.path.join(os.path.join(current_dir,'testing_ground_files','vul_out.csv')),delimiter=',')
#fig=plt.figure()
#plt.plot(frag_curves[:,0],frag_curves[:,1])
#plt.plot(frag_curves[:,0],frag_curves[:,2])
#plt.plot(frag_curves[:,0],frag_curves[:,3])
#plt.plot(frag_curves[:,0],frag_curves[:,4])
#
fig2=plt.figure()
plt.plot(vul_curve_array[:,0],vul_curve_array[:,1])

fig3=plt.figure()
plt.plot(imls_linspace,probability_damage_state)

fig4=plt.figure()
plt.loglog(imls,edps,marker='o',linestyle='None')
