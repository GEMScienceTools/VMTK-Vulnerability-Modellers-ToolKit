# import dependencies 
import os
import tkinter as tk
import tkinter.messagebox
from tkinter import ttk
from tkinter import filedialog


#%% general functions for GUI

def browse_folder():
    folder_selected = filedialog.askdirectory()
    folderPath.set(folder_selected)
    return True

def browse_file():
    file_selected = filedialog.askopenfilename()
    filePath.set(file_selected)
    return True

#%%
root=tk.Tk()
root.title('GEM - Risk Modellers ToolKit')
root.iconbitmap(os.path.join(os.getcwd(),'figs','GEM-LOGO-Red-CS3-square.ico'))

#%%
notebook = ttk.Notebook(root)

f1 = tk.Frame(notebook)
f2 = tk.Frame(notebook)
f3 = tk.Frame(notebook)
f4 = tk.Frame(notebook)
f5 = tk.Frame(notebook)
f6 = tk.Frame(notebook)
f7 = tk.Frame(notebook)

notebook.add(f1, text='Demand',sticky='w',)
notebook.add(f2, text='Capacity',sticky='w')
notebook.add(f3, text='Structural Response',sticky='w')
notebook.add(f4, text='Fragility Analysis',sticky='w')
notebook.add(f5, text='Vulnerability Analysis',sticky='w')
notebook.add(f6, text='Compare Results',sticky='w')
notebook.add(f7, text='Verify Results',sticky='w')

#%% ------ Demand Tab -----

# list of records and IM
label1=tk.Label(f1,text="Location of records:").grid(row=0,column=0,pady=10,sticky="w")
folderPath = tk.StringVar()
folderPath.set("Please select a folder")
entry1 = tk.Entry(f1,textvariable=folderPath,fg="grey",width=50).grid(row=0,column=1,pady=10,padx=10)
btnBrowse = ttk.Button(f1, text="Browse",command=browse_folder)
btnBrowse.grid(row=0,column=2)

label2=tk.Label(f1,text="Intensity measure").grid(row=0,column=3,padx=10,pady=10)
IMs = ['PGA','SA(0.2s)','SA(0.3s)','SA(0.5s)','SA(0.6s)','SA(1.0s)','SA(2.0s)']
IM_tkvar = tk.StringVar()
IM_tkvar.set('PGA') # set the default option

# options based on radio button selection
label3=tk.Label(f1,text="Intensity measure levels").grid(row=3,column=0)
imls_entry=tk.StringVar()
imls_entry.set("Please insert IMLs separated by commas")
entry2 = tk.Entry(f1,textvariable=imls_entry,fg="grey",width=50)
entry2.configure(state='disabled')

label3=tk.Label(f1,text="Number of records per IML").grid(row=3,column=3)
no_gmrs_entry=tk.IntVar()
entry3 = tk.Entry(f1,textvariable=no_gmrs_entry,fg="grey",width=5)
entry3.configure(state='disabled')

label4=tk.Label(f1,text="Min scaling factor").grid(row=4,column=0)
min_scale_factor_entry=tk.IntVar()
entry4 = tk.Entry(f1,textvariable=min_scale_factor_entry,fg="grey",width=5)
entry4.configure(state='disabled')

label5=tk.Label(f1,text="Max scaling factor").grid(row=4,column=3)
max_scale_factor_entry=tk.IntVar()
entry5 = tk.Entry(f1,textvariable=max_scale_factor_entry,fg="grey",width=5)
entry5.configure(state='disabled')

label6=tk.Label(f1,text="Intensity measure levels").grid(row=6,column=0)
imls_entry=tk.StringVar()
imls_entry.set("Please insert IMLs separated by commas")
entry6 = tk.Entry(f1,textvariable=imls_entry,fg="grey",width=50)
entry6.configure(state='disabled')

label7=tk.Label(f1,text="Hazard curve file:").grid(row=7,column=0,pady=10,sticky="w")
filePath = tk.StringVar()
filePath.set("Please select a file")
entry7 = tk.Entry(f1,textvariable=filePath,fg="grey",width=50)
entry7.configure(state='disabled')

btnBrowse1= ttk.Button(f1, text="Browse",command=browse_file)
btnBrowse1.configure(state='disabled')

label8=tk.Label(f1,text="Hazard disaggregation file:").grid(row=8,column=0,pady=10,sticky="w")
filePath = tk.StringVar()
filePath.set("Please select a file")
entry8 = tk.Entry(f1,textvariable=filePath,fg="grey",width=50)
entry8.configure(state='disabled')

btnBrowse2 = ttk.Button(f1, text="Browse",command=browse_file)
btnBrowse2.configure(state='disabled')

# radio button with options
def rad_button_enable(value):
      if value==1:
            return True
      elif value==2:
            entry2.configure(state='normal'); entry2.update()
            entry3.configure(state='normal'); entry3.update()
            entry4.configure(state='normal'); entry4.update()
            entry5.configure(state='normal'); entry5.update()
            
            entry6.configure(state='disabled'); entry6.update()
            entry7.configure(state='disabled'); entry7.update()
            entry8.configure(state='disabled'); entry8.update()
            btnBrowse1.configure(state='disabled');btnBrowse1.update()
            btnBrowse2.configure(state='disabled');btnBrowse2.update()
      elif value==3:
            entry6.configure(state='normal'); entry6.update()
            entry7.configure(state='normal'); entry7.update()
            entry8.configure(state='normal'); entry8.update()
            btnBrowse1.configure(state='normal');btnBrowse1.update()
            btnBrowse2.configure(state='normal');btnBrowse2.update()
            
            entry2.configure(state='disabled'); entry2.update()
            entry3.configure(state='disabled'); entry3.update()
            entry4.configure(state='disabled'); entry4.update()
            entry5.configure(state='disabled'); entry5.update()
      else:
            return False
      return True

dropMenu = tk.OptionMenu(f1,IM_tkvar,*IMs).grid(row=0,column=4)

radio_var=tk.IntVar()
radio_var.set("1")
tk.Radiobutton(f1,text="Use all records",variable=radio_var,value=1,command=lambda:rad_button_enable(1)).grid(row=1,column=0,sticky = 'w')
tk.Radiobutton(f1,text="Select records based on range of IMs",variable=radio_var,value=2,command=lambda:rad_button_enable(2)).grid(row=2,column=0,sticky = 'w')
tk.Radiobutton(f1,text="Select records based on conditional spectrum method",variable=radio_var,value=3,command=lambda:rad_button_enable(3)).grid(row=5,column=0,sticky = 'w')

# grid all the elements
entry2.grid(row=3,column=1,pady=10,padx=10)
entry3.grid(row=3,column=4,pady=10,padx=10)
entry4.grid(row=4,column=1,pady=10,padx=10)
entry5.grid(row=4,column=4,pady=10,padx=10)
entry6.grid(row=6,column=1,pady=10,padx=10)
entry7.grid(row=7,column=1,pady=10,padx=10)
entry8.grid(row=8,column=1,pady=10,padx=10)
btnBrowse1.grid(row=7,column=2)
btnBrowse2.grid(row=8,column=2)



#%%

notebook.pack()

#%%
root.mainloop()

