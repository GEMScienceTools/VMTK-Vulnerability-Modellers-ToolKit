# -*- coding: utf-8 -*-
"""
Created on Thu Oct 17 09:21:29 2019

@author: LuisMartins
"""

import numpy as np

# %%
def polylinear_curve_fit(x_array,y_array,n_pts=10):
      
      # This functon takes a generic curve and fits n linear segments through 
      # adaptive interpolation

      indices=np.array(np.round(np.linspace(0,np.size(y_array)-1,n_pts,endpoint=True),decimals=0),dtype=int)
      derivative_approx = np.diff(y_array[indices])
      inv_diff=1/np.abs(derivative_approx)
      weight_of_section=inv_diff/np.sum(inv_diff)
      
      total_range=np.max(x_array)-np.min(x_array)
      size_of_section=weight_of_section*total_range
      
      # fitted curve points
      x_array_fit=x_array[0]+(np.append(np.zeros([1]),np.cumsum(size_of_section)))
      y_array_fit=np.interp(x_array_fit,x_array,y_array)
      
      return x_array_fit,y_array_fit

def get_notable_capacity_pts(capacity_array):
      
      no_capacity_curves=np.array(np.size(capacity_array,1)/2,dtype=int)
      no_capacity_lines=np.array(np.size(capacity_array,0))
      
      sdys=np.zeros(no_capacity_curves) #stores yield displacements
      sdus=np.zeros(no_capacity_curves) #stores ult displacements
      
      says=np.zeros(no_capacity_curves) #stores yield accels
      saus=np.zeros(no_capacity_curves) #stores ult accels
      
      for i in range(no_capacity_curves):
            x_array=capacity_array[:,2*i]
            y_array=capacity_array[:,2*i+1]
            
            if no_capacity_lines>5:
                  
                  # this case should happen when a cap curve generated through a 
                  # numerical model is used
                  
                  x_array_fit,y_array_fit=polylinear_curve_fit(x_array,y_array)
                  
                  # using a real capacity curve from a numerical model I tested
                  # and for 10pts polylinearfit the point at -4 position looks
                  # a good approx of the yield point
                  
                  sdys[i]=x_array_fit[-4]
                  sdus[i]=x_array_fit[-1]
                  
                  says[i]=y_array_fit[-4]
                  saus[i]=y_array_fit[-1]
                  
            elif no_capacity_lines>3:
                  
                  # case of a trilinear/quadrilinear model
                  
                  sdys[i]=x_array[2]
                  sdus[i]=x_array[-1]
                  
                  says[i]=y_array[2]
                  saus[i]=y_array[-1]
                  
            else:
                  # case of a bilinear model
                  
                  sdys[i]=x_array[1]
                  sdus[i]=x_array[-1]
                  
                  says[i]=y_array[1]
                  saus[i]=y_array[-1]
      
      return sdys,sdus,says,saus

#%%

cap_curve=np.loadtxt("E:/Dropbox/git_global_risk_model/new_revised_rmtk/rmtk_new/revised_rmtk/capacity/testing_ground/cap_curves_py_test.csv",dtype=float,delimiter=',')
x_array_fit,y_array_fit=polylinear_curve_fit(cap_curve[:,0],cap_curve[:,1])

sdys,sdus,says,saus=get_notable_capacity_pts(cap_curve)
